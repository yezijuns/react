{"ast":null,"code":"import { CHANGE_INPUT_VALUE, ADD_TODO_ITEM, DELETE_TODO_ITEM, INIT_LIST_ACTION } from './actionTypes';\nconst defaultState = {\n  inputValue: '',\n  list: []\n}; // reducer 可以接受state, 但绝不能修改state\n// reducer是一个纯函数\n// 纯函数指的是，给定固定的输入，就一段会有固定的输出，而且不会有任何副作用\n\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === CHANGE_INPUT_VALUE) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.inputValue = action.value;\n    return newState;\n  }\n\n  if (action.type === INIT_LIST_ACTION) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list = action.value;\n    return newState;\n  }\n\n  if (action.type === ADD_TODO_ITEM) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list.push(newState.inputValue);\n    newState.inputValue = '';\n    return newState;\n  }\n\n  if (action.type === DELETE_TODO_ITEM) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.list.splice(action.index, 1);\n    return newState;\n  }\n\n  return state;\n});","map":{"version":3,"names":["CHANGE_INPUT_VALUE","ADD_TODO_ITEM","DELETE_TODO_ITEM","INIT_LIST_ACTION","defaultState","inputValue","list","state","action","type","newState","JSON","parse","stringify","value","push","splice","index"],"sources":["C:/Users/a/Desktop/react/react1/todolist/src/store/reducer.js"],"sourcesContent":["import { CHANGE_INPUT_VALUE, ADD_TODO_ITEM, DELETE_TODO_ITEM, INIT_LIST_ACTION } from './actionTypes'\r\n\r\nconst defaultState = {\r\n  inputValue: '',\r\n  list: []\r\n}\r\n\r\n// reducer 可以接受state, 但绝不能修改state\r\n// reducer是一个纯函数\r\n// 纯函数指的是，给定固定的输入，就一段会有固定的输出，而且不会有任何副作用\r\nexport default (state = defaultState, action) => {\r\n  if (action.type === CHANGE_INPUT_VALUE) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.inputValue = action.value;\r\n    return newState\r\n  }\r\n\r\n  if (action.type === INIT_LIST_ACTION) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.list = action.value;\r\n    return newState\r\n  }\r\n\r\n  if (action.type === ADD_TODO_ITEM) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.list.push(newState.inputValue);\r\n    newState.inputValue = '';\r\n    return newState\r\n  }\r\n\r\n  if (action.type === DELETE_TODO_ITEM) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.list.splice(action.index, 1);\r\n    return newState\r\n  }\r\n\r\n  return state;\r\n}"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,aAA7B,EAA4CC,gBAA5C,EAA8DC,gBAA9D,QAAsF,eAAtF;AAEA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EADO;EAEnBC,IAAI,EAAE;AAFa,CAArB,C,CAKA;AACA;AACA;;AACA,gBAAe,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAC/C,IAAIA,MAAM,CAACC,IAAP,KAAgBT,kBAApB,EAAwC;IACtC,MAAMU,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;IACAG,QAAQ,CAACL,UAAT,GAAsBG,MAAM,CAACM,KAA7B;IACA,OAAOJ,QAAP;EACD;;EAED,IAAIF,MAAM,CAACC,IAAP,KAAgBN,gBAApB,EAAsC;IACpC,MAAMO,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;IACAG,QAAQ,CAACJ,IAAT,GAAgBE,MAAM,CAACM,KAAvB;IACA,OAAOJ,QAAP;EACD;;EAED,IAAIF,MAAM,CAACC,IAAP,KAAgBR,aAApB,EAAmC;IACjC,MAAMS,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;IACAG,QAAQ,CAACJ,IAAT,CAAcS,IAAd,CAAmBL,QAAQ,CAACL,UAA5B;IACAK,QAAQ,CAACL,UAAT,GAAsB,EAAtB;IACA,OAAOK,QAAP;EACD;;EAED,IAAIF,MAAM,CAACC,IAAP,KAAgBP,gBAApB,EAAsC;IACpC,MAAMQ,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;IACAG,QAAQ,CAACJ,IAAT,CAAcU,MAAd,CAAqBR,MAAM,CAACS,KAA5B,EAAmC,CAAnC;IACA,OAAOP,QAAP;EACD;;EAED,OAAOH,KAAP;AACD,CA3BD"},"metadata":{},"sourceType":"module"}