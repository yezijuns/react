{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Desktop\\\\react\\\\react1\\\\todolist\\\\src\\\\TodoList.js\";\nimport React, { Component, Fragment } from 'react';\nimport TodoItem from './TodoItem';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  // 当组件的state或者props发生改变时，render函数就会重新执行\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      list: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleBtnClick = this.handleBtnClick.bind(this);\n    this.handleItemDelete = this.handleItemDelete.bind(this);\n  } // 组件即将北挂载到页面的时刻自动执行\n\n\n  componentWillMount() {\n    console.log('componentWillMount');\n  }\n\n  render() {\n    console.log('parent render');\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"insertArea\",\n          children: \"\\u8F93\\u5165\\u5185\\u5BB9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"insertArea\",\n          className: \"input\",\n          value: this.state.inputValue,\n          onChange: this.handleInputChange,\n          ref: input => {\n            this.input = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleBtnClick,\n          children: \"\\u63D0\\u4EA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: ul => {\n          this.ul = ul;\n        },\n        children: this.getTodoItem()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this);\n  } // 组件被挂载到页面之后，自动被执行\n\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  shouldComponentUpdate() {\n    console.log('shouldComponentUpdate');\n    return true;\n  } // 组件被更新之前，它会自动执行，但是它在shouldComponentUpdate之后\n  // 如果shouldComponentUpdate返回true它才执行\n  // 如果返回false，这个函数就不会被执行了\n\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n\n  getTodoItem() {\n    return this.state.list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        content: item,\n        index: index,\n        deleteItem: this.handleItemDelete\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  handleInputChange() {\n    const value = this.input.value;\n    this.setState(() => ({\n      inputValue: value\n    }));\n  }\n\n  handleBtnClick() {\n    this.setState(prevState => ({\n      list: [...prevState.list, prevState.inputValue],\n      inputValue: ''\n    }), () => {\n      console.log(this.ul.querySelectorAll('div').length);\n    });\n  }\n\n  handleItemDelete(index) {\n    this.setState(prevState => {\n      const list = [...prevState.list];\n      list.splice(index, 1);\n      return {\n        list\n      };\n    });\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"names":["React","Component","Fragment","TodoItem","TodoList","constructor","props","state","inputValue","list","handleInputChange","bind","handleBtnClick","handleItemDelete","componentWillMount","console","log","render","input","ul","getTodoItem","componentDidMount","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","map","item","index","value","setState","prevState","querySelectorAll","length","splice"],"sources":["C:/Users/a/Desktop/react/react1/todolist/src/TodoList.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport TodoItem from './TodoItem'\r\nimport './style.css'\r\n\r\nclass TodoList extends Component {\r\n  // 当组件的state或者props发生改变时，render函数就会重新执行\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: '',\r\n      list: []\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n    this.handleBtnClick = this.handleBtnClick.bind(this)\r\n    this.handleItemDelete = this.handleItemDelete.bind(this)\r\n  }\r\n\r\n  // 组件即将北挂载到页面的时刻自动执行\r\n  componentWillMount() {\r\n    console.log('componentWillMount')\r\n  }\r\n\r\n  render() {\r\n    console.log('parent render')\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div>\r\n          <label htmlFor='insertArea'>输入内容</label>\r\n\t\t\t\t\t<input\r\n           id=\"insertArea\"\r\n           className='input'\r\n           value={this.state.inputValue}\r\n           onChange={this.handleInputChange}\r\n           ref={(input) => {this.input = input}}\r\n          />\r\n\t\t\t\t\t<button onClick={this.handleBtnClick}>提交</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul ref={(ul) => {this.ul = ul}}>\r\n\t\t\t\t\t{this.getTodoItem()}\r\n\t\t\t\t</ul>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n\r\n  // 组件被挂载到页面之后，自动被执行\r\n  componentDidMount() {\r\n    console.log('componentDidMount')\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    console.log('shouldComponentUpdate');\r\n    return true;\r\n  }\r\n\r\n  // 组件被更新之前，它会自动执行，但是它在shouldComponentUpdate之后\r\n  // 如果shouldComponentUpdate返回true它才执行\r\n  // 如果返回false，这个函数就不会被执行了\r\n  componentWillUpdate() {\r\n    console.log('componentWillUpdate');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('componentDidUpdate');\r\n  }\r\n\r\n  getTodoItem() {\r\n    return this.state.list.map((item, index) => {\r\n      return (\r\n        <TodoItem\r\n          key={index}\r\n          content={item}\r\n          index={index}\r\n          deleteItem={this.handleItemDelete}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  handleInputChange() {\r\n    const value = this.input.value\r\n    this.setState(() => ({\r\n      inputValue: value\r\n    }));\r\n  }\r\n  \r\n  handleBtnClick() {\r\n    this.setState((prevState) => ({\r\n      list: [...prevState.list, prevState.inputValue],\r\n      inputValue: ''\r\n    }), () => {\r\n      console.log(this.ul.querySelectorAll('div').length)\r\n    });\r\n  }\r\n\r\n  handleItemDelete(index) {\r\n    this.setState((prevState) => {\r\n      const list = [...prevState.list]\r\n      list.splice(index, 1)\r\n      return {list}\r\n    });\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;EAC/B;EACAI,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,UAAU,EAAE,EADD;MAEXC,IAAI,EAAE;IAFK,CAAb;IAIA,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;IACA,KAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;IACA,KAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;EACD,CAX8B,CAa/B;;;EACAG,kBAAkB,GAAG;IACnBC,OAAO,CAACC,GAAR,CAAY,oBAAZ;EACD;;EAEDC,MAAM,GAAG;IACPF,OAAO,CAACC,GAAR,CAAY,eAAZ;IACF,oBACC,QAAC,QAAD;MAAA,wBACC;QAAA,wBACM;UAAO,OAAO,EAAC,YAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADN,eAEC;UACM,EAAE,EAAC,YADT;UAEM,SAAS,EAAC,OAFhB;UAGM,KAAK,EAAE,KAAKT,KAAL,CAAWC,UAHxB;UAIM,QAAQ,EAAE,KAAKE,iBAJrB;UAKM,GAAG,EAAGQ,KAAD,IAAW;YAAC,KAAKA,KAAL,GAAaA,KAAb;UAAmB;QAL1C;UAAA;UAAA;UAAA;QAAA,QAFD,eASC;UAAQ,OAAO,EAAE,KAAKN,cAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATD;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAYC;QAAI,GAAG,EAAGO,EAAD,IAAQ;UAAC,KAAKA,EAAL,GAAUA,EAAV;QAAa,CAA/B;QAAA,UACE,KAAKC,WAAL;MADF;QAAA;QAAA;QAAA;MAAA,QAZD;IAAA;MAAA;MAAA;MAAA;IAAA,QADD;EAkBA,CAtC+B,CAwC/B;;;EACAC,iBAAiB,GAAG;IAClBN,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACD;;EAEDM,qBAAqB,GAAG;IACtBP,OAAO,CAACC,GAAR,CAAY,uBAAZ;IACA,OAAO,IAAP;EACD,CAhD8B,CAkD/B;EACA;EACA;;;EACAO,mBAAmB,GAAG;IACpBR,OAAO,CAACC,GAAR,CAAY,qBAAZ;EACD;;EAEDQ,kBAAkB,GAAG;IACnBT,OAAO,CAACC,GAAR,CAAY,oBAAZ;EACD;;EAEDI,WAAW,GAAG;IACZ,OAAO,KAAKb,KAAL,CAAWE,IAAX,CAAgBgB,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC1C,oBACE,QAAC,QAAD;QAEE,OAAO,EAAED,IAFX;QAGE,KAAK,EAAEC,KAHT;QAIE,UAAU,EAAE,KAAKd;MAJnB,GACOc,KADP;QAAA;QAAA;QAAA;MAAA,QADF;IAQD,CATM,CAAP;EAUD;;EAEDjB,iBAAiB,GAAG;IAClB,MAAMkB,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAzB;IACA,KAAKC,QAAL,CAAc,OAAO;MACnBrB,UAAU,EAAEoB;IADO,CAAP,CAAd;EAGD;;EAEDhB,cAAc,GAAG;IACf,KAAKiB,QAAL,CAAeC,SAAD,KAAgB;MAC5BrB,IAAI,EAAE,CAAC,GAAGqB,SAAS,CAACrB,IAAd,EAAoBqB,SAAS,CAACtB,UAA9B,CADsB;MAE5BA,UAAU,EAAE;IAFgB,CAAhB,CAAd,EAGI,MAAM;MACRO,OAAO,CAACC,GAAR,CAAY,KAAKG,EAAL,CAAQY,gBAAR,CAAyB,KAAzB,EAAgCC,MAA5C;IACD,CALD;EAMD;;EAEDnB,gBAAgB,CAACc,KAAD,EAAQ;IACtB,KAAKE,QAAL,CAAeC,SAAD,IAAe;MAC3B,MAAMrB,IAAI,GAAG,CAAC,GAAGqB,SAAS,CAACrB,IAAd,CAAb;MACAA,IAAI,CAACwB,MAAL,CAAYN,KAAZ,EAAmB,CAAnB;MACA,OAAO;QAAClB;MAAD,CAAP;IACD,CAJD;EAKD;;AAhG8B;;AAmGjC,eAAeL,QAAf"},"metadata":{},"sourceType":"module"}